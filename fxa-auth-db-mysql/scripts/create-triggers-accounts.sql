USE fxa;
SET NAMES utf8mb4 COLLATE utf8mb4_bin;

--
-- Short summary of `pt-online-schema-change` mechanics:
--
-- 1) creates a mirror `_tablename_new` table identical to the schema of
--   `tablename`.
--
-- 2) runs the alter on `_tablename_new` specified in the `--alter`
-- option. Since it is altering an empty table, this takes zero time.
--
-- 3) installs triggers for insert/delete/update changes to `tablename`
--    so that changes to `tablename` are replayed into `_tablename_new`
--    while the the copy phase in (4) is in progress.
--
-- 4) begins walking the rows in `tablename`, copying chunks into
--    `_tablename_new` while adapting the chunk size as various
--    performance metrics (execution time, slave lag, master threads
--    running) change.
--
-- 5) when the copy phase is complete, `pt-osc` swaps the `_tablename_new`
--    with `tablename`, and removes the triggers the swapped out table.  the
--    triggers on `tablename`. The contents of what was `_tablename_new` are
--    now the new authoritative table contents.
--
-- This script is intended to provide a "playground" to get familiar
-- with steps 1-3 below in a local environment.
--

--
-- Clear any existing triggers leftover from previous runs.
--
DROP TRIGGER IF EXISTS pt_osc_fxa_accounts_del;
DROP TRIGGER IF EXISTS pt_osc_fxa_accounts_ins;
DROP TRIGGER IF EXISTS pt_osc_fxa_accounts_upd;

--
-- Create fxa._accounts_new as a mirror copy of fxa.accounts schema and data.
--
DROP TABLE IF EXISTS _accounts_new;
CREATE TABLE `_accounts_new` (
  `uid` binary(16) NOT NULL,
  `normalizedEmail` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  `email` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  `emailCode` binary(16) NOT NULL,
  `emailVerified` tinyint(1) NOT NULL DEFAULT '0',
  `kA` binary(32) NOT NULL,
  `wrapWrapKb` binary(32) NOT NULL,
  `authSalt` binary(32) NOT NULL,
  `verifyHash` binary(32) NOT NULL,
  `verifierVersion` tinyint(3) unsigned NOT NULL,
  `verifierSetAt` bigint(20) unsigned NOT NULL,
  `createdAt` bigint(20) unsigned NOT NULL,
  `locale` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `lockedAt` bigint(20) unsigned DEFAULT NULL,
  PRIMARY KEY (`uid`),
  UNIQUE KEY `normalizedEmail` (`normalizedEmail`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci SELECT * FROM accounts;

--
-- Add two new columns to `fxa`.`_accounts_new`.
--
ALTER TABLE _accounts_new ADD COLUMN profileChangedAt BIGINT UNSIGNED DEFAULT NULL,
                          ADD COLUMN keysChangedAt BIGINT UNSIGNED DEFAULT NULL;

--
-- Install triggers for DELETE/INSERT/UPDATE changes of the `fxa`.`accounts`
-- table to repeat them idempotently into the `fxa`.`_accounts_new` table
--
-- NOTE: these statements are the statements generated by
-- `pt-online-schema-change`, which lowercases all the column names.
--
CREATE TRIGGER `pt_osc_fxa_accounts_del` AFTER DELETE ON `fxa`.`accounts` FOR EACH ROW
  DELETE FROM `fxa`.`_accounts_new` WHERE `fxa`.`_accounts_new`.`uid` <=> OLD.`uid`;

--
CREATE TRIGGER `pt_osc_fxa_accounts_ins` AFTER INSERT ON `fxa`.`accounts` FOR EACH ROW
  REPLACE INTO `fxa`.`_accounts_new` (`uid`, `normalizedemail`, `email`, `emailcode`, `emailverified`, `ka`, `wrapwrapkb`, `authsalt`,
               `verifyhash`, `verifierversion`, `verifiersetat`, `createdat`, `locale`, `lockedat`)
  VALUES (NEW.`uid`, NEW.`normalizedemail`, NEW.`email`, NEW.`emailcode`, NEW.`emailverified`, NEW.`ka`, NEW.`wrapwrapkb`, NEW.`authsalt`,
          NEW.`verifyhash`, NEW.`verifierversion`, NEW.`verifiersetat`, NEW.`createdat`, NEW.`locale`, NEW.`lockedat`);

--
DELIMITER $$
CREATE TRIGGER `pt_osc_fxa_accounts_upd` AFTER UPDATE ON `fxa`.`accounts` FOR EACH ROW
  BEGIN
    DELETE FROM `fxa`.`_accounts_new`
      WHERE !(OLD.`uid` <=> NEW.`uid`)
        AND `fxa`.`_accounts_new`.`uid` <=> OLD.`uid`;
    REPLACE INTO `fxa`.`_accounts_new` (`uid`, `normalizedemail`, `email`, `emailcode`, `emailverified`, `ka`, `wrapwrapkb`,
                                        `authsalt`, `verifyhash`, `verifierversion`, `verifiersetat`, `createdat`, `locale`, `lockedat`)
    VALUES (NEW.`uid`, NEW.`normalizedemail`, NEW.`email`, NEW.`emailcode`, NEW.`emailverified`, NEW.`ka`, NEW.`wrapwrapkb`,
            NEW.`authsalt`, NEW.`verifyhash`, NEW.`verifierversion`, NEW.`verifiersetat`, NEW.`createdat`, NEW.`locale`, NEW.`lockedat`);
  END
$$
DELIMITER ;
